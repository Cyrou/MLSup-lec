#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Dec  4 12:38:30 2018

@author: philippenaroz
"""

import pandas as pd
import numpy as np
import random
import matplotlib.pyplot as plt
from numpy import linalg
from sklearn.model_selection import train_test_split

dataX=pd.read_csv('/Users/philippenaroz/Desktop/datasets/data_set_2_X.csv')
#x=np.ravel(pd.read_csv('/Users/philippenaroz/Desktop/datasets/data_set_2_X.csv'))
dataY=np.ravel(pd.read_csv('/Users/philippenaroz/Desktop/datasets/data_set_2_Y.csv'))

mprime = 1000
eta = 0.5
T = mprime

#question 1

val = [0.00001, 0.00002, 0.00005, 0.0001, 0.0005, 0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.5,0.7,1 ]

error_res = np.array([])

for mu in val:
    error_tab = []
    
    for j in range(1):
        
        w=np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
        #len(dataX) = len(dataY) = 99999
        
        X_train, X_test, y_train, y_test = train_test_split(dataX,dataY, train_size=0.01, random_state=0, shuffle=True)
        #len(X_train) = 999
        #len(X_test) = 99000
        for t in range (T) :
            i = random.randint(0,998) #999 car en réalité la premiere ligne du fichier est pas lue donc il y a 99999 lignes 
            v = 2*mu*w[t] 
            if (  y_train[i]*np.dot(w[t],X_train.values[i])  < 1 ) :
                v = v - y_train[i]*X_train.values[i]
            temp = w[t]-eta*v
            w = np.append(w,[temp],axis = 0)
        w_res = w[T]
       # print('w_res=',w_res)
        
        error = 0
        
        for k in range(99000):
          #  print('value =',y_test[i]*np.dot(w_res,X_test.values[i]))
            if ( y_test[k]*np.dot(w_res,X_test.values[k]) < 1 ) :
                #error = error + ((1 - y_test[k]*np.dot(w_res,X_test.values[k])))
                
                error = error + 1
        error_tab.append(error)
    
    error_mean = np.mean(error_tab)/99000
    
    error_res=np.append(error_res, [error_mean])

min_val = error_res.min()
mu_etoile = val[error_res.argmin()]

plt.figure    
plt.plot(val, error_res)
plt.plot(mu_etoile, min_val, 'ro',label='mu_etoile')
plt.legend()
plt.title('error function of mu ')
plt.xlabel('mu ')
plt.ylabel('average error rate')
plt.show()

#question 2

print('mu_etoile = ', mu_etoile)
print('min_error = ', min_val)


#question 3
mu_etoile =0.00001
w_final = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])

for j in range(30):
        
    w=np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
    #len(dataX) = len(dataY) = 99999
    
    X_train, X_test, y_train, y_test = train_test_split(dataX,dataY, train_size=0.01, random_state=None)
    #len(X_train) = 999
    #len(X_test) = 99000
    
    for t in range (T) :
        i = random.randint(0,998) #999 car en réalité la premiere ligne du fichier est pas lue donc il y a 99999 lignes 
        v = 2*mu_etoile*w[t] 
        if (  y_train[i]*np.dot(w[t],X_train.values[i])  < 1 ) :
            v = v - y_train[i]*X_train.values[i]
        temp = w[t]-eta*v
        w = np.append(w,[temp],axis = 0)
    w_res = w[T]
    w_final = np.append(w_final, [w_res], axis = 0)
   # print('w_res=',w_res)

res = w_final.mean(0)
print('w_res_normalized =', res/linalg.norm(res))

